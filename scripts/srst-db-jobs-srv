#!/usr/bin/env python2

from __future__ import division
from pySupRST import SupRstDB
import schedule
import time

# some consts
# DB
DB_USER = 'srst-db-jobs'
DB_PWD = 'sup_rst'
# misc
PROCESS_NAME = 'db_adm'


# call every minutes
def job_every_min():
    sup = SupRstDB(db_user=DB_USER, db_pwd=DB_PWD, process=PROCESS_NAME)
    try:
        pass
    finally:
        sup.close()


# some routines
def job_every_hours():
    sup = SupRstDB(db_user=DB_USER, db_pwd=DB_PWD, process=PROCESS_NAME)
    try:
        pass
    finally:
        sup.close()


# call at 00h00 every day
def job_midnight():
    sup = SupRstDB(db_user=DB_USER, db_pwd=DB_PWD, process=PROCESS_NAME)
    try:
        with sup.db.cursor() as cursor:
            # store current ICMP index at 00h00
            cursor.execute(
                """
                INSERT
                INTO `icmp_index` (id_host, date_time, up_index, down_index)
                SELECT id_host, NOW(), icmp_up_index, icmp_down_index FROM `icmp`;
                """)

            # purge alarms log
            cursor.execute('DELETE FROM `alarms` WHERE (TO_DAYS(NOW()) - TO_DAYS(`date_time`)) > 365;')

            # purge icmp log (365 for state, 100 days for index, 4 days for rtt)
            cursor.execute('DELETE FROM `icmp_history` WHERE (TO_DAYS(NOW()) - TO_DAYS(`event_date`)) > 365;')
            cursor.execute('DELETE FROM `icmp_index` WHERE (TO_DAYS(NOW()) - TO_DAYS(`date_time`)) > 100;')
            cursor.execute('DELETE FROM `icmp_rtt_log` WHERE (TO_DAYS(NOW()) - TO_DAYS(`rtt_datetime`)) > 4;')

            # purge modbus history (2 years for ts, 365 days for tg, 8 days for tm)
            cursor.execute('DELETE FROM `mbus_ts_log` WHERE (TO_DAYS(NOW()) - TO_DAYS(`update`)) > 2 * 365;')
            cursor.execute('DELETE FROM `mbus_tm_log` WHERE (TO_DAYS(NOW()) - TO_DAYS(`update`)) > 8;')
            cursor.execute('DELETE FROM `mbus_tg_log` WHERE (TO_DAYS(NOW()) - TO_DAYS(`update`)) > 365;')

            # optimize table (MyISAM only)
            cursor.execute(
                """
                OPTIMIZE TABLE `alarms`, `hosts`, `icmp`, `icmp_history`, `icmp_index`,
                `icmp_rtt_log`, `mbus`, `mbus_tables`, `mbus_tg`, `mbus_tg_log`,
                `mbus_tm`, `mbus_tm_log`, `mbus_ts`, `mbus_ts_log`, `mbus_v_grad`, `mbus_v_tg`,
                `mbus_v_tm`, `mbus_v_ts`, `variables`, `subnets`;
                """)
    finally:
        sup.close()


# init schedule
schedule.every().minute.do(job_every_min)
schedule.every().hour.do(job_every_hours)
schedule.every().day.at('00:00').do(job_midnight)

# main loop
while True:
    schedule.run_pending()
    time.sleep(1.0)
